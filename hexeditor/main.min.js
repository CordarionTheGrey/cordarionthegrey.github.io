(function(){"use strict";var DEFAULT_SCALE,DEFAULT_EDGE_THICKNESS,PALETTES,model,customEventListeners,addCustomListener,fireCustomListener,$id,moveTileRaw,newSVG,newTileNode,placeTile,unplaceTile,getEdgeKey,getEdge,placeEdge,main;DEFAULT_SCALE=3.5;DEFAULT_EDGE_THICKNESS=0.25;PALETTES=['palette-tile-placer','palette-object-registry','palette-tile-inspector','palette-edge-inspector'];model={svgRoot:null,tiles:{},edges:{},idCounter:0,auxTile:null,activePal:"",placerAction:"",curInspected:null,curInspected1:null,curInspected2:null,curInspectedEdge:null};customEventListeners={};addCustomListener=function(target,type,action){var x$,that;x$=customEventListeners[type]||(customEventListeners[type]={});if(that=x$[target]){that.push(action);}else{x$[target]=[action];}};fireCustomListener=function(target,type){var that,i$,x$,len$,e;if(that=customEventListeners[type]){if(that=that[target]){for(i$=0,len$=that.length;i$<len$;++i$){x$=that[i$];try{x$();}catch(e$){e=e$;console.error(e);}}}}};var Vec={make:function(q,r){return(q&0xFF)|(r&0xFF)<<8;},fromCartesian:function(x,y,scale){var t=y/3/scale;return this.make(Math.round(x/Math.sqrt(3)/scale-t),Math.round(t*2));},toCartesian:function(vec,scale){var q=vec<<24>>24,r=vec<<16>>24;return[(q+r*.5)*Math.sqrt(3)*scale,r*1.5*scale];},add:function(a,b){return((a+b)&0xFF)|((a+(b&0xFF00))&0xFF00);},sub:function(a,b){return((a-b)&0xFF)|((a-(b&0xFF00))&0xFF00);},mul:function(vec,n){return(vec<<24)*n>>>24|((vec&0xFF00)<<16)*n>>>16;},cmp:function(a,b){return(((a+0x80)&0xFF)|((a+0x8000)&0xFF00))-(((b+0x80)&0xFF)|((b+0x8000)&0xFF00));},len:function(vec){var q=vec<<24>>24,r=vec<<16>>24,result=Math.abs(q+r);if((q^r)<0){return result+Math.min(Math.abs(q),Math.abs(r));}
return result;},dist:function(a,b){return this.len(this.sub(a,b));},inArrowSector:function(arrow,pos){if(!pos)return false;var q=pos<<24>>24,r=pos<<16>>24;switch(arrow){case 0x0001:return r<=q&&r<<1>=-q;case 0x00FF:return r>=q&&r<<1<=-q;case 0x0100:return r>=q&&r>=-q<<1;case 0xFF00:return r<=q&&r<=-q<<1;case 0xFF01:return r>=-q<<1&&r<<1<=-q;case 0x01FF:return r<=-q<<1&&r<<1>=-q;case 0xFE01:return r<0&&r===-q<<1;case 0x02FF:return r>0&&r===-q<<1;default:return false;}},_cache:[[0x0]],ofLen:function(n){var result=this._cache[n],i;if(result)return result;for(i=this._cache.length;i<n;i++){this._cache[i]=null;}
result=[this.make(0,-n),this.make(0,n)];for(i=1;i<n;i++){result.push(this.make(-i,i-n),this.make(-i,n),this.make(i,-n),this.make(i,n-i));}
for(i=0;i<=n;i++){result.push(this.make(-n,i),this.make(n,-i));}
return(this._cache[n]=result.sort(this.cmp));}};$id=function(it){return document.getElementById(it);};moveTileRaw=function(tile,x,y){var x$;x$=tile.transform.baseVal[0].matrix;x$.e=x;x$.f=y;};newSVG=function(tagName,attrs,children){var node,i$,ref$,len$,key,x$;node=document.createElementNS('http://www.w3.org/2000/svg',tagName);for(i$=0,len$=(ref$=Object.keys(attrs)).length;i$<len$;++i$){key=ref$[i$];node.setAttribute(key,attrs[key]);}
if(children){for(i$=0,len$=children.length;i$<len$;++i$){x$=children[i$];node.appendChild(x$);}}
return node;};newTileNode=function(pos,id,color){var children,x$,xy;children=[newSVG('polygon',{points:"9.5,-5.5 9.5,5.5 0,11 -9.5,5.5 -9.5,-5.5 0,-11",fill:color}),newSVG('text',{'class':'tile-label'})];if(id!=null){children.push(newSVG('text',{'class':'tile-id',y:-6}));}
x$=newSVG('g',{'class':'hex-tile',transform:"translate(0,0)"},children);xy=Vec.toCartesian(pos,11);moveTileRaw(x$,xy[0],xy[1]);if(id!=null){x$.lastChild.textContent="#"+id;}
return x$;};placeTile=function(pos,id,color){var node,polygon,label;console.assert(!(pos in model.tiles),"A tile is placed above another one");node=newTileNode(pos,id,color);model.svgRoot.appendChild(node);polygon=node.firstChild;label=polygon.nextSibling;return model.tiles[pos]={pos:pos,id:id,node:node,polygon:polygon,label:label,pic:label.nextSibling};};unplaceTile=function(pos){var tile;tile=model.tiles[pos];if(!tile){console.assert(false,"Cannot unplace non-existent tile");return;}
model.svgRoot.removeChild(tile.node);delete model.tiles[pos];};getEdgeKey=function(pos0,pos1){console.assert(pos0<=pos1,"Invalid parameter order in getEdgeKey");return pos0<<16|pos1;};getEdge=function(pos0,pos1){var t;if(pos0>pos1){t=pos0;pos0=pos1;pos1=t;}
return model.edges[getEdgeKey(pos0,pos1)];};placeEdge=function(pos0,pos1,thickness){var t,key,x1,y1,x2,y2,line;if(pos0>pos1){t=pos0;pos0=pos1;pos1=t;}
key=getEdgeKey(pos0,pos1);console.assert(!(key in model.edges),"An edge is placed above another one");switch(Vec.sub(pos1,pos0)){case 0x0001:x1=9.5;y1=-5.5;x2=9.5;y2=5.5;break;case 0x00FF:x1=-9.5;y1=-5.5;x2=-9.5;y2=5.5;break;case 0x0100:x1=9.5;y1=5.5;x2=0;y2=11;break;case 0xFF00:x1=-9.5;y1=-5.5;x2=0;y2=-11;break;case 0xFF01:x1=9.5;y1=-5.5;x2=0;y2=-11;break;case 0x01FF:x1=-9.5;y1=5.5;x2=0;y2=11;}
line=newSVG('line',{x1:x1,y1:y1,x2:x2,y2:y2,style:"stroke-width:"+thickness});model.tiles[pos0].node.appendChild(line);return model.edges[key]={pos0:pos0,pos1:pos1,thickness:thickness,line:line};};main=function(){var svg,coeff,rootX,rootY,i$,ref$,len$,palId,pal,placeButton,unplaceButton;removeEventListener('DOMContentLoaded',main);model.svgRoot=$id('svg-root');svg=model.svgRoot.parentNode;coeff=0.5/DEFAULT_SCALE;rootX=svg.clientWidth*coeff;rootY=svg.clientHeight*coeff;moveTileRaw(model.svgRoot,rootX,rootY);for(i$=0,len$=(ref$=PALETTES).length;i$<len$;++i$){palId=ref$[i$];pal=$id(palId);(fn$.call(this,palId,pal.getElementsByClassName('contents')[0]));}
placeButton=$id('place-tile');unplaceButton=$id('unplace-tile');placeButton.addEventListener('click',function(){unplaceButton.classList.remove('pressed-button');placeButton.classList.toggle('pressed-button');model.placerAction=model.placerAction!=='place'?'place':"";});unplaceButton.addEventListener('click',function(){placeButton.classList.remove('pressed-button');unplaceButton.classList.toggle('pressed-button');model.placerAction=model.placerAction!=='unplace'?'unplace':"";});addCustomListener('palette-tile-placer','close',function(){placeButton.classList.remove('pressed-button');unplaceButton.classList.remove('pressed-button');model.placerAction="";});svg.addEventListener('mousemove',function(ev){var pos,that,x$;if(model.placerAction!=='place'){return;}
pos=Vec.fromCartesian(ev.offsetX-rootX,ev.offsetY-rootY,11);if(!(pos in model.tiles)){if(that=model.auxTile){unplaceTile(that.pos);}
x$=model.auxTile=placeTile(pos,null,'#F2F2F2');x$.node.classList.add('ghost');}});svg.addEventListener('click',function(ev){var pos,tile,that,ref$,ref1$,input,edge;if(model.placerAction==='place'){if(model.auxTile){unplaceTile(model.auxTile.pos);placeTile(model.auxTile.pos,++model.idCounter,'#EEEEEE');model.auxTile=null;}}else if(model.placerAction==='unplace'){pos=Vec.fromCartesian(ev.offsetX-rootX,ev.offsetY-rootY,11);if(pos in model.tiles){unplaceTile(pos);}}else if(model.activePal==='palette-tile-inspector'){pos=Vec.fromCartesian(ev.offsetX-rootX,ev.offsetY-rootY,11);if((tile=model.tiles[pos])&&tile!==model.curInspected){if(model.curInspected){model.curInspected.node.classList.remove('inspected');}
model.curInspected=tile;tile.node.classList.add('inspected');$id('inspected-id').textContent="#"+tile.id;$id('inspected-color').value=tile.polygon.style.fill||'#EEEEEE';$id('inspected-label').value=tile.label.textContent;}}else if(model.activePal==='palette-edge-inspector'){pos=Vec.fromCartesian(ev.offsetX-rootX,ev.offsetY-rootY,11);if(tile=model.tiles[pos]){if(model.curInspected1&&!model.curInspected2&&Vec.dist(model.curInspected1.pos,tile.pos)<=1){if(tile!==model.curInspected1){model.curInspected2=tile;}}else{model.curInspected1=tile;model.curInspected2=null;}
$id('inspected-edge').textContent=((that=(ref$=model.curInspected1)!=null?ref$.id:void 8)?'#'+that:'?')+" — "+((that=(ref1$=model.curInspected2)!=null?ref1$.id:void 8)?'#'+that:'?');input=$id('inspected-edge-thickness');if(!(input.disabled=!model.curInspected2)){edge=getEdge(model.curInspected1.pos,model.curInspected2.pos);if(edge){model.curInspectedEdge=edge;}else{edge=model.curInspectedEdge=placeEdge(model.curInspected1.pos,model.curInspected2.pos,DEFAULT_EDGE_THICKNESS);}
input.value=edge.thickness;}else{input.value="";}}}});svg.addEventListener('mouseleave',function(){var that;if(model.placerAction!=='place'){return;}
if(that=model.auxTile){unplaceTile(that.pos);model.auxTile=null;}});$id('inspected-color').addEventListener('input',function(){var that;if(that=model.curInspected){that.polygon.style.fill=this.value;}});$id('inspected-label').addEventListener('input',function(){var that;if(that=model.curInspected){that.label.textContent=this.value;}});addCustomListener('palette-tile-inspector','close',function(){if(model.curInspected){model.curInspected.node.classList.remove('inspected');$id('inspected-id').textContent="<Не выбрано>";$id('inspected-color').textContent=$id('inspected-label').textContent="";model.curInspected=null;}});$id('inspected-edge-thickness').addEventListener('input',function(){model.curInspectedEdge.thickness=model.curInspectedEdge.line.style.strokeWidth=this.value;});addCustomListener('palette-edge-inspector','close',function(){model.curInspected1=model.curInspected2=null;$id('inspected-edge').textContent="? — ?";$id('inspected-edge-thickness').value="";});function fn$(palId,contents){contents.classList.add('hidden');pal.getElementsByClassName('header')[0].addEventListener('click',function(){var that;if(that=model.activePal){$id(that).getElementsByClassName('contents')[0].classList.add('hidden');fireCustomListener(that,'close');if(palId===that){model.activePal="";return;}}
fireCustomListener(palId,'open');contents.classList.toggle('hidden');model.activePal=palId;});}};addEventListener('DOMContentLoaded',main);}).call(this);